#!/bin/bash
# set-access-log [user]
# If no user is specified, all users on the system will be enabled,
# with the exception of any user with the file /home/$user/.nolog

set -o errexit
set -o nounset

enabled=0
sharedsocket="/home/.sharedlogsocket"
logblocker="/home/.nolog"

enable () {
  local user="${1}"
  local home="/home/${user}"
  local userdev="${home}/dev"
  local usersocket="${userdev}/log"

  # Allow some users to not be logged
  if grep -e "^${user}$" "${logblocker}"; then
    echo "${user} will not be logged, remove the user from ${logblocker} to allow it."
    rm -f "${usersocket}"

  else
    mkdir -p "${userdev}"
    ln --force "${sharedsocket}" "${usersocket}"
    echo "${user} will be logged."
    (( enabled = enabled + 1 ))
  fi
}

wait_for_socket() {
  for i in $(seq 0 10); do
    if [[ -e "${sharedsocket}" ]]; then
      return 0
    fi

    echo "Waiting for rsyslogd to create the shared socket..."
    sleep 1
  done

  echo "Error: rsyslogd doesn't appear to have created the socket!"
  return 1
}

# rsyslog needs to create the socket before we can link to it
wait_for_socket

# No user specified, enable for all users found in /home/
if [ $# -lt 1 ]; then

  echo "All users will have verbose acces logging enabled, except those in listed in /home/.nolog"

  for d in /home/*/; do
      user="$(echo ${d} | awk -F\/ '{print $3}')"
      enable "${user}"
  done

else # A user was specified

  if [[ ! -d "/home/${1}" ]]; then
    echo "${1} doesn't seem to have a directory at /home/${1}"
    exit 1
  fi

  enable "${1}"
fi